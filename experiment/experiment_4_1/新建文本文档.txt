死锁：当A,B双方给对方汇款时，两个线程先后进入transferMoney方法。若t1进入synchronized(fromAccount)后切换到t2线程，此时a账户被锁住，t2也执行了synchronized(fromAccount)导致b账户被锁住。此时两个线程分别持有一个锁，而完整执行转账方法需要两个锁都持有，故发生死锁。
修复的方法
修复：前一种写法对于两个线程来说上锁的先后顺序不同，因为都是先给转账账户上锁，再给被转账账户上锁，而两个线程的的两个账户相反，所以会发生死锁。但是在这个写法中，规定先给hash值小的账户上锁，就使得上锁顺序相同，不会发生死锁。比如，场景为t1线程正在执行，锁住了a账户，此时即使切换到b线程，由于b没有a账户的锁，所以无法执行转账方法，直到t1执行完毕后t2才能执行，避免死锁。